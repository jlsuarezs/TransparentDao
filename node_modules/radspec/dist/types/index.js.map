{"version":3,"sources":["../../src/types/index.js"],"names":["bool","require","int","uint","address","bytes","string","fixed","ufixed","module","exports","types","isType","identifier","typeNames","Object","keys","typeName","isInteger","isAddress","size"],"mappings":"kBAAMA,CAAAA,IAAI,CAAGC,OAAO,CAAC,QAAD,C,CACdC,GAAG,CAAGD,OAAO,CAAC,OAAD,C,CACbE,IAAI,CAAGF,OAAO,CAAC,QAAD,C,CACdG,OAAO,CAAGH,OAAO,CAAC,WAAD,C,CACjBI,KAAK,CAAGJ,OAAO,CAAC,SAAD,C,CACfK,MAAM,CAAGL,OAAO,CAAC,UAAD,C,CAChBM,KAAK,CAAGN,OAAO,CAAC,SAAD,C,CACfO,MAAM,CAAGP,OAAO,CAAC,UAAD,C,CAEtBQ,MAAM,CAACC,OAAP,CAAiB,CACfC,KAAK,CAAE,CACLX,IADK,CAELE,GAFK,CAGLC,IAHK,CAILC,OAJK,CAKLC,KALK,CAMLC,MANK,CAOLC,KAPK,CAQLC,MARK,CADQ,CAYfI,MAAM,CAAEC,UAAF,CAAc,CAClB,KAAMC,CAAAA,SAAS,CAAGC,MAAM,CAACC,IAAP,CAAY,KAAKL,KAAjB,CAAlB,CAEA,IAAK,GAAIM,CAAAA,QAAT,GAAqBH,CAAAA,SAArB,CACE,GAAI,KAAKH,KAAL,CAAWM,QAAX,EAAqBL,MAArB,CAA4BC,UAA5B,CAAJ,CACE,SAIJ,QACD,CAtBc,CAwBfK,SAAS,CAAEL,UAAF,CAAc,CACrB,MAAO,MAAKF,KAAL,CAAWT,GAAX,CAAeU,MAAf,CAAsBC,UAAtB,GACL,KAAKF,KAAL,CAAWR,IAAX,CAAgBS,MAAhB,CAAuBC,UAAvB,CACH,CA3Bc,CA6BfM,SAAS,CAAEN,UAAF,CAAc,CACrB,MAAO,MAAKF,KAAL,CAAWP,OAAX,CAAmBQ,MAAnB,CAA0BC,UAA1B,GACL,KAAKF,KAAL,CAAWN,KAAX,CAAiBO,MAAjB,CAAwBC,UAAxB,GACqC,EAArC,OAAKF,KAAL,CAAWN,KAAX,CAAiBe,IAAjB,CAAsBP,UAAtB,CAEH,CAlCc,C","sourcesContent":["const bool = require('./bool')\nconst int = require('./int')\nconst uint = require('./uint')\nconst address = require('./address')\nconst bytes = require('./bytes')\nconst string = require('./string')\nconst fixed = require('./fixed')\nconst ufixed = require('./ufixed')\n\nmodule.exports = {\n  types: {\n    bool,\n    int,\n    uint,\n    address,\n    bytes,\n    string,\n    fixed,\n    ufixed\n  },\n\n  isType (identifier) {\n    const typeNames = Object.keys(this.types)\n\n    for (let typeName of typeNames) {\n      if (this.types[typeName].isType(identifier)) {\n        return true\n      }\n    }\n\n    return false\n  },\n\n  isInteger (identifier) {\n    return this.types.int.isType(identifier) ||\n      this.types.uint.isType(identifier)\n  },\n\n  isAddress (identifier) {\n    return this.types.address.isType(identifier) || (\n      this.types.bytes.isType(identifier) &&\n      this.types.bytes.size(identifier) <= 20\n    )\n  }\n}\n"],"file":"index.js"}