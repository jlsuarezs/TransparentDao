"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault"),_ava=_interopRequireDefault(require("ava")),_sinon=_interopRequireDefault(require("sinon")),_events=require("events"),_external=require("./external");_ava.default.afterEach.always(()=>{_sinon.default.restore()}),(0,_ava.default)("should return an observable from the contract events",async t=>{t.plan(1);// arrange
const eventEmitter=new _events.EventEmitter,contract={events:{allEvents:_sinon.default.stub().withArgs(8).returns(eventEmitter)}},web3Stub={eth:{Contract:_sinon.default.stub().withArgs("addr","ji").returns(contract)}},result=(0,_external.events)({params:["addr","ji",8]// act
},null,{web3:web3Stub});// assert
result.subscribe(value=>{t.deepEqual(value,{event:"pay_fee",amount:5})}),eventEmitter.emit("data",{event:"pay_fee",amount:5})});
//# sourceMappingURL=external.test.js.map